plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.15'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

ext {
    set('springCloudVersion', "2021.0.1")
    set('queryDslVersion', "5.0.0")
}
repositories {
    mavenCentral()
}


subprojects {

    repositories {
        mavenCentral()
    }

    group = 'com.kokio'
    version = '0.0.1-SNAPSHOT'

    java {
        sourceCompatibility = '11'
    }

    apply plugin: 'java'
    // build.gradle에서 api()를 사용하려면 java-library 사용
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    // spring boot dependency를 사용하여 사용중인 부트 버젼에서 자동으로 의존성을 가져온다.
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.hibernate:hibernate-core:5.5.6.Final'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'


        // Feign
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

        // sql
        runtimeOnly 'mysql:mysql-connector-java:8.0.28'

        // mongo
        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
        // H2
        testImplementation 'com.h2database:h2:1.4.200'

        //jwt
        implementation 'io.jsonwebtoken:jjwt:0.9.1'

        //json
        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

        //RandomStringUtils
        implementation 'org.apache.commons:commons-lang3:3.12.0' //

        //websocket
        implementation 'org.springframework.boot:spring-boot-starter-websocket'
        implementation 'org.webjars:sockjs-client:1.1.2'
        implementation 'org.webjars:stomp-websocket:2.3.3-1'

        //view
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        implementation 'org.springframework.boot:spring-boot-starter-freemarker'
        implementation 'org.springframework.boot:spring-boot-devtools'
        implementation 'org.webjars.bower:bootstrap:4.3.1'
        implementation 'org.webjars.bower:vue:2.5.16'
        implementation 'com.google.code.gson:gson:2.8.0'
        implementation 'org.webjars.bower:axios:0.17.1'


        //swagger
        implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
        //redis

        implementation 'org.springframework.boot:spring-boot-starter-data-redis'

        // Lettuce is the redis client that spring boot 2 uses by default
        implementation 'io.lettuce:lettuce-core'

        //junit
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.junit.jupiter:junit-jupiter:5.8.0'

        testImplementation 'org.springframework.security:spring-security-test'
        testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        implementation "com.querydsl:querydsl-jpa:${queryDslVersion}" // 적절한 버전 사용
        annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}" // 적절한 버전 사용

    }


    tasks.named('test') {
        useJUnitPlatform()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }


    bootJar {
        enabled = true
    }
}

project(':user-api') { // 컴파일 시 multi-module-database 로딩
    jar { enabled = true }
    dependencies {
        implementation project(':common-module')
        implementation project(':entity-module')
    }
}

project(':product-api') { // 컴파일 시 multi-module-database 로딩
    jar { enabled = true }
    dependencies {
        implementation project(':common-module')
        implementation project(':entity-module')
    }
}

project(':common-module') { // multi-module-databse는 bootJar로 패키징 할 필요 없음
    jar { enabled = true }
}

project(':entity-module') { // multi-module-databse는 bootJar로 패키징 할 필요 없음
    jar { enabled = true }
}
