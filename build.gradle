plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.14'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

ext {
    set('springCloudVersion', "2021.0.1")
}
repositories {
    mavenCentral()
}


subprojects {

    repositories {
        mavenCentral()
    }

    group = 'com.kokio'
    version = '0.0.1-SNAPSHOT'

    java {
        sourceCompatibility = '11'
    }

    apply plugin: 'java'
    // build.gradle에서 api()를 사용하려면 java-library 사용
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    // spring boot dependency를 사용하여 사용중인 부트 버젼에서 자동으로 의존성을 가져온다.
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // sql
        runtimeOnly 'mysql:mysql-connector-java:8.0.28'

        //jwt
        implementation 'io.jsonwebtoken:jjwt:0.9.1'

        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.security:spring-security-test'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }


    bootJar {
        enabled = true
    }
}

project(':user-api') { // 컴파일 시 multi-module-database 로딩
    bootJar { enabled = false }
    jar { enabled = true }
    dependencies {
    }
}
